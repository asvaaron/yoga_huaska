---
- name: Set up packages for AML project
  hosts: AML_virtual
  become: yes
  gather_facts: True

  tasks:
    - debug: var=hostvars[inventory_hostname]['ansible_enp0s3']['ipv4']['address']
    - name: Load Ruby Vars
      include_vars:
        file: vars/ruby_vars.json
        name: ruby_vars
    - name: Ouput System OS
      debug:
        msg: "Hello world"

    - name: Download the installation script for Node Js
      shell: curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -

    - name: Download the installation keys for YARN
      shell: curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
    - name: Add YARN APT repository
      lineinfile:
        path: /etc/apt/sources.list.d/yarn.list
        regex: '^deb https://dl.yarnpkg.com/debian/ stable main'
        line: 'deb https://dl.yarnpkg.com/debian/ stable main'
        create: yes

    - name: Update apt packages
      apt:
        update_cache: yes

    # Add the RVM repository
    - name: Add RVM repository
      apt_repository:
        repo: ppa:rael-gc/rvm
        state: present

    - name: Install Yoga Huaska Dependencies
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        # Install basic packages
        - software-properties-common
        - build-essential
        - libssl-dev
        - libffi-dev
        - htop
        - wget
        - ca-certificates
        - cowsay
        - libsasl2-dev
        # Install Node and NPM
        - nodejs
        - yarn
        # Install Redis
        - redis-server
        # Mysql client connector
        - libmysqlclient-dev
        # Install RVM
        - rvm
        # Apache, Mysql, Postgres
        - php
        - apache2
        - postgresql
        - postgresql-contrib
        - libpq-dev
        - python-psycopg2
        - phppgadmin

#    # Install ruby with defined version
#    - name: Install a ruby version
#      shell: |
#        /bin/bash --login
#        /usr/share/rvm/bin/rvm install {{ ruby_vars.ruby_version }}
#      become: false
#
#    - name: Make ruby default version
#      shell: |
#          /bin/bash --login
#          /usr/share/rvm/bin/rvm --default {{ ruby_vars.ruby_version  }}
#      become: false
#
#
##      ## Configure Postgres sql
    - name: Ensure the PostgreSQL service is running
      service:
        name: postgresql
        state: started
        enabled: yes

    - name: Get postgres version
      find:
        path: /etc/postgresql
        file_type: directory
      register: postgres_version

    - name: Define postgres_version
      set_fact:
        postgres_version: "{{ postgres_version.files[0].path | regex_search(qry) }}"
      vars:
        qry: '[0-9]+'

    - debug: var=postgres_version

    - name: Allow External database connection
      lineinfile:
        path: "/etc/postgresql/{{ postgres_version }}/main/pg_hba.conf"
        state: present
        regexp: '^host    all             all             127.0.0.1/32            md5'
        line: host    all             all             0.0.0.0/32            md5

    - name: Allow postgres connection md5 check
      lineinfile:
        path: "/etc/postgresql/{{ postgres_version }}/main/pg_hba.conf"
        state: present
        regexp: '^local   all             postgres                                peer'
        line: local   all             postgres                                md5

    - name: restart postgresql
      service:
        name: postgresql
        state: restarted

    - name: Reboot a slow machine that might have lots of updates to apply
      reboot:
        reboot_timeout: 3600

    - name: Create a new database with same name as username
      postgresql_db:
        name: "{{ ruby_vars.postgres_username }}"

    - name: Add user to Postgres cluster, grant access
      postgresql_user:
        login_user: postgres
        role_attr_flags: "SUPERUSER"
        name: "{{ ruby_vars.postgres_username }}"
        password: "{{ ruby_vars.postgres_username }}"
        state: present
